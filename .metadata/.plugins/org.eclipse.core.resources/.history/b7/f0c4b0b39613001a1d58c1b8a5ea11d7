package com.class27;

public class CardTest {

	public static void main(String[] args) {
		
		//runtime polymorphism can be achieved through overriding
		//take an obj of the child class and give ref to parent 
		//reference variable = object is created
		//during runtime - java virtual machine JVM- will look at runtime obj
		//
		Card card=new AX();
		card.creditLimit();
		
		Card card1=new MC();
		card1.creditLimit();
		
		Card card2=new Visa();
		card2.creditLimit();
		
		//type array[]={} 
		//type array[]=new type[]; 
		int[] numArray={10,12,13};
		String[] stringArray= {"aa, bb"};
		//1. created objs and assign to the variables and then
		//stored those variables inside the array
		Card[] cardArray= {card, card1, card2};
		//creating an obj and storing it directly into an Array of 
		Card[] cardArray1= {new MC(), new AX(), new Visa()};
		
		//cardArray[0] --MC
		//cardArray[1] -- AX
		
		for(Card myCard:cardArray1) {
			myCard.creditLimit();
			myCard.chargeInterest();	
		}
		for(int y=0; y<cardArray1.length; y++) {
			cardArray1[y].creditLimit();
		}
		
	Card c1=new Card();
	c1.chargeInterest();
	c1.creditLimit();
	
	AX ax1=new AX();
	ax1.chargeInterest();
	ax1.chargeInterest();
	
	MC mc1=new MC();
	mc1.chargeInterest();
	mc1.creditLimit();
	
	MC mc2=new MC();
	MC mc3=new MC();
	
	Card cc=new Card();
	cc.chargeInterest();
	cc.creditLimit();
	
	MC[] masterCards= {mc1, mc2, mc3 };
	for(MC mCard: masterCards) {
		mCard.chargeInterest();
		mCard.creditLimit();
	}
}
}














// line 10 - creating an obj of child class -- process of typecasting
// casting an obj is changing the hierachy 