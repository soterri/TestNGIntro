package com.class30;


public abstract class Vehicle {
	
		String vinNumber;
		
		//how to initialize variables for CONSTRUCTOR
		Vehicle(String vinNumber){ //as soon as u pass as a constructor becomes local variable
			this.vinNumber=vinNumber;
			
		}
		
		public void drive() {
			System.out.println("Vehicle can drive");
		}
		public void stop() {
			System.out.println("Vehicle can stop");
		}
		
		public abstract void start();
		abstract void speed();
	}
	abstract class Car extends Vehicle { // get an CE 
		
		String carType; 
		
		Car(String vinNumber, String carType){
		super(vinNumber); //parent must go first SUPER
		this.carType=carType;
		
		}
		public void speed() {
			System.out.println("Max car speed up to 400");
		}
		public abstract void braking();
	}
	
	class BMW extends Car {
		
		String make, model; // local constructor will 
		
		BMW (String vinNumber, String carType, String make, String model){
			super.vinNumber=vinNumber;
			this.make=make;
			this.model=model;
		}

		@Override
		public void start() {
			System.out.println("BMW can start remote!");
			
		}

		@Override
		public void braking() {
			System.out.println("BMW can break");
			
		}
		public void display() {
			System.out.println("We build " +make+ " "+model+" with vin # " +vinNumber);
		}
	}


