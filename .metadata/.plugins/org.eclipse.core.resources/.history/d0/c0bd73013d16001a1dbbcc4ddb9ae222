package com.class29;

public abstract class Phone {

	//IMPLENMENTED METHODS
	public  void makeCall() {
		System.out.println("Make call");
	}
	public void sendText() {
		System.out.println("Send text");
		
	}
	public abstract void takePictures();
		//UNIMPLEMENTED METHODS - do not want to provide an 
		//implementation meaning no body you have method header but no method body
		//as a child class will have to do with abstract classes
	public abstract void playGames();
	
	}
//concrete class - everything is defined 
class iPhone extends Phone{

	@Override
	public void takePictures() {
		System.out.println("iPhone takes pictures");
		
	}

	@Override
	public void playGames() {
		System.out.println("Play games on iPhone");
		
	} 
	
}
class Samsung extends Phone{

	@Override
	public void takePictures() {
		System.out.println("Samsung takes pictures");
		
	}

	@Override
	public void playGames() {
		System.out.println("Play games on Samsung");
		
	}
	
}

//as soon as you try to create a relationship with abstract class -> CE 
//CE will tell you if you want to extend you will have to implementation all the methods of the parent class 
//must provide IMPLEMENTATION! 
//will be forced to provide implementation for all un-implemented classes
//when can we create the object? when everything has been implemented. 
//any time u have an abstract class - it shows as incomplete
//can only create an obj when the class is 100% defined 
	